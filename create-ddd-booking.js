import { MeetingRoomApiClient } from './mcp-server/dist/api-client.js';

async function createDDDBooking() {
  try {
    console.log('üéØ T·∫°o booking cho DDD th√¥ng qua MCP server...\n');
    
    const client = new MeetingRoomApiClient();
    
    // L·∫•y ng√†y mai
    const tomorrow = new Date();
    tomorrow.setDate(tomorrow.getDate() + 1);
    const dateString = tomorrow.toISOString().split('T')[0];
    
    // T·∫°o th·ªùi gian cho ng√†y mai 9:00-10:00
    const startTime = `${dateString}T09:00:00`;
    const endTime = `${dateString}T10:00:00`;
    
    console.log('üìã Th√¥ng tin booking:');
    console.log('- Ph√≤ng: Ph√≤ng h·ªçp B - T·∫ßng 1 (ID: 5mujqkopdme0sceny)');
    console.log('- Ng∆∞·ªùi ƒë·∫∑t: DDD');
    console.log('- Email: ddd@example.com');
    console.log('- Ng√†y: ' + dateString);
    console.log('- Th·ªùi gian: 9:00 - 10:00');
    console.log('');
    
    const bookingData = {
      roomId: '5mujqkopdme0sceny', // ID c·ªßa ph√≤ng B - T·∫ßng 1
      user: {
        name: 'DDD',
        email: 'ddd@example.com'
      },
      startTime: startTime,
      endTime: endTime
    };
    
    const booking = await client.createBooking(bookingData);
    
    console.log('‚úÖ Booking ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!');
    console.log('üìù Chi ti·∫øt booking:');
    console.log('- Booking ID:', booking.id);
    console.log('- Ph√≤ng:', booking.roomName);
    console.log('- Ng∆∞·ªùi ƒë·∫∑t:', booking.user.name);
    console.log('- Email:', booking.user.email);
    console.log('- Th·ªùi gian:', booking.startTime, 'ƒë·∫øn', booking.endTime);
    console.log('- T·∫°o l√∫c:', new Date(booking.createdAt).toLocaleString('vi-VN'));
    
  } catch (error) {
    console.log('‚ùå L·ªói khi t·∫°o booking:', error.message);
    console.log('üí° ƒê·∫£m b·∫£o backend server ƒëang ch·∫°y t·∫°i http://localhost:3001');
  }
}

createDDDBooking(); 